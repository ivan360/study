= 3.1 输入输出重定向 =
使用输入重定向能够将文件导入到命令中，而输出重定向则是能够将原本要输出到屏幕的数据信息写入到指定文件中

对于输入重定向有这些情况：
命令 < 文件          -- 将文件作为命令的标准输入
命令 << 分界符       -- 从标准输入中读入，直到遇见“分界符”才停止
命令 < 文件1 > 文件2 -- 将文件1作为命令的标准输入并将标准输出到文件2

对于输出重定向符有这些情况：
命令 > 文件                        -- 将标准输出重定向到一个文件中（清空原有文件的数据）
命令 2> 文件                       -- 将错误输出重定向到一个文件中（清空原有文件的数据）
命令 >> 文件                       -- 将标准输出重定向到一个文件中（追加到原有内容的后面）
命令 2>> 文件                      -- 将错误输出重定向到一个文件中（追加到原有内容的后面）
命令 >> 文件 2>&1 或 命令 &>> 文件 -- 将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）

= 3.2 管道命令符 =
将前一个命令原本要输出到屏幕的数据当作是后一个命令的标准输入

找出被限制登录用户的命令是:grep "/sbin/nologin" /etc/passwd | wc -l
ls -l /etc/ | more

通过将管道符来结合passwd命令的--stdin参数做一句话的重置密码操作：
echo "linuxprobe" | passwd --stdin root

发邮件，标题与内容一起"打包"
echo "Content" | mail -s "Subject" linuxprobe

# mail -s "Readme" root@linuxprobe.com << over
> I think linux is very practical
> I hope to learn more
> can you teach me ?
> over

= 3.3 命令行的通配符 =
配符顾名思义就是通用的匹配信息的符号
(*)就是代表匹配零个或多个字符
(?)是代表匹配单个字符
([0-9])代表匹配单个阿拉伯数字的字符而括号内加上字母([abc])则是代表匹配单个指定的英文字母。

ll /dev/sda?
ll /dev/sda[0-9]
ll /dev/sda[135]

= 3.4 常用的转义字符 =
反斜杠(\)的作用就是转义后面的一个字符变为单纯的字符串

单引号('')则是转义其中所有的字符为单纯的字符串

而双引号（""）是保留其中的变量属性不转义

反引号(``)则是将其中的命令执行后返回一个结果

= 3.5 重要的环境变量 =
那当用户执行了一条命令之后到底发生了什么事情呢？简单来说就是四个步骤：
1. 判断路径
2. 检查命令是否为"别名命令"
    alias 别名=命令
    unalias 别名
3. 判断是内部命令还是外部命令,type 命令
4. 在PATH变量定义的路径中查找命令
    echo $PATH
    PATH=$PATH:/root/bin
    
env命令来查看到linux系统中所有的环境变量
变量名称       作用
HOME           用户的主目录（即家目录）
SHELL          用户在使用的SHELL解释器名称
HISTSIZE       历史命令记录条数
HISTFILESIZE   历史命令记录条数
MAIL           邮件信箱文件保存路径
LANG           系统语言、语系名称
RANDOM         生成一个随机数字
PS1            bash解释器的提示符
PATH           定义解释器搜索用户执行命令的路径
EDITOR         用户默认的文本编辑器

export :一般变量转换成全局变量
