装CentOS默认是开启SELinux的，所以会导致samba、ftp等应用程序无法访问相应目录，解决办法如下
开启Samba用户HOME目录权限

/usr/sbin/setsebool  -P samba_enable_home_dirs=1

开启单个共享目录（path）权限

chcon -t samba_share_t path

开启所有共享目录
只读权限

/usr/sbin/setsebool -P samba_export_all_ro on

读写权限

/usr/sbin/setsebool -P samba_export_all_rw on

查看某个目录（path）是否开启了权限
======================================================================
======================================================================

# audit2why < /var/log/audit/audit.log
# audit2allow < /var/log/audit/audit.log

== 預設目錄的安全性本文查詢與修改 ==
# semanage {login|user|port|interface|fcontext|translation} -l
# semanage fcontext -{a|d|m} [-frst] file_spec
選項與參數：
fcontext ：主要用在安全性本文方面的用途， -l 為查詢的意思；
-a ：增加的意思，你可以增加一些目錄的預設安全性本文類型設定；
-m ：修改的意思；
-d ：刪除的意思。

`範例一`：查詢一下 /var/www/html 的預設安全性本文設定為何！
# semanage fcontext -l
SELinux fcontext    type          Context
....(前面省略)....
/var/www(/.*)?      all files     system_u:object_r:httpd_sys_content_t:s0
....(後面省略)....

`範例二`：利用 semanage 設定 /srv/samba 目錄的預設安全性本文為 public_content_t
# mkdir /srv/samba
# ll -Zd /srv/samba
drwxr-xr-x  root root root:object_r:var_t    /srv/samba
如上所示，預設的情況應該是 var_t 這個咚咚的！

# semanage fcontext -l | grep '/srv'
/srv/.*                     all files   system_u:object_r:var_t:s0
/srv/([^/]*/)?ftp(/.*)?     all files   system_u:object_r:public_content_t:s0
/srv/([^/]*/)?www(/.*)?     all files   system_u:object_r:httpd_sys_content_t:s0
/srv/([^/]*/)?rsync(/.*)?   all files   system_u:object_r:public_content_t:s0
/srv/gallery2(/.*)?         all files   system_u:object_r:httpd_sys_content_t:s0
/srv                        directory   system_u:object_r:var_t:s0 <==看這裡！
上面則是預設的 /srv 底下的安全性本文資料，不過，並沒有指定到 /srv/samba 啦

# semanage fcontext -a -t public_content_t "/srv/samba(/.*)?"
# semanage fcontext -l | grep '/srv/samba'
/srv/samba(/.*)?            all files   system_u:object_r:public_content_t:s0

# cat /etc/selinux/targeted/contexts/files/file_contexts.local
#This file is auto-generated by libsemanage
#Please use the semanage command to make changes
/srv/samba(/.*)?    system_u:object_r:public_content_t:s0
#其實就是寫入這個檔案的囉！ ^_^

# restorecon -Rv /srv/samba* <==嘗試恢復預設值
# ll -Zd /srv/samba
drwxr-xr-x  root root system_u:object_r:public_content_t /srv/samba/
#有預設值，以後用 restorecon 來修改比較簡單！
======================================================================
======================================================================


# semanage fcontext -l | grep '/smbhome'
#
1. sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28

1.1 sestatus -b
1.2 sestatus -b | grep "on\$"

# sestatus -b | grep samba
samba_create_home_dirs                      off
samba_domain_controller                     off
samba_enable_home_dirs                      off
samba_export_all_ro                         on
samba_export_all_rw                         on
samba_portmapper                            off
samba_run_unconfined                        off
samba_share_fusefs                          off
samba_share_nfs                             off
sanlock_use_samba                           off
use_samba_home_dirs                         off
virt_sandbox_use_samba                      off
virt_use_samba                              off

2. getenforce 
Enforcing
2.1 setenforce 1 
;设定selinux模式为enforcing
2.2 setenforce 0 
;设定selinux模式为permissive

修改/etc/sysconfig/selinux：这个文件决定了系统启动时是否启用

============================================================
在安装Oracle的时候.先要检查SELinux是否已经启用.
[root@localhost ~]# sestatus
SELinux status:  disabled

常用命令如下:

sestatus       -- 查询系统的selinux目前的状态
selinuxenabled -- 查询系统的selinux支援是否有启用
setenforce     -- 设定selinux运作状态
getsebool      -- 列出所有selinux bool数值清单列表与内容
setsebool      -- 设定selinux bool数值内容
chcon          -- 变更档案目录security context
restorecon     -- 恢复档案目录的预设的security context
fixfiles       -- 修正档案目录的预设的security context
semanage       -- SELiux policy管理程式
secon          -- 检视行程、档案等等项目的SELinux context
audit2why      -- 检视SELinux audit讯息内容
sealert        -- SELinux 讯息诊断用户端程式

下面列出几个常用的：

1、sestatus工具
查询系统的selinux 目前的状态
# sestatus
SELinux status:                 enabled
SELinuxfs mount:                /selinux
Current mode:                   permissive
Mode from config file:          permissive
Policy version:                 21
Policy from config file:        targeted

2、selinuxenabled工具
检查系统selinux是否开启，是通过返回值进行判断selinux是否已经启动，0：表示已经启动selinux；1：表示已经关闭selinux
例如：selinuxenabled ; echo?，返回的结果为：1

3、setenforce工具
功能：设定切换selinux的运行状态（0或者1），前提是开启了selinux，同时这种切换只对当前有效，如果重新启动的话，就没有效了（注意：如果关闭了selinux，那么就必须配置/etc/selinux/config文件）
语法：setenforce [ Enforcing | Permissive | 1 | 0 ]
说明如下：
enforcing 或者1，表示开启强制模式
permissive 或者0，表示开启警告但是无限制模式
例如：下面这个例子
# sestatus | grep -i mod
Current mode:                   permissive
Mode from config file:          permissive
# setenforce 1
# sestatus | grep -i mod
Current mode:                   enforcing
Mode from config file:          permissive

4、getsebool与setsebool工具
说明：SELinux规范了许多boolean数值清单档案，提供开启或关闭功能存取项目，而这些值都存放在/selinux/booleans/目录内相关档案，这些档案里的值只有两种：1（启用）或 0（关闭）

1）getsebool
说明：列出所有selinux bool数值清单列表与内容
使用方式：getsebool [ -a ]
例如以下范例：
# getsebool ftpd_disable_trans
ftpd_disable_trans --> off
# getsebool -a
NetworkManager_disable_trans --> off
allow_cvs_read_shadow --> off
allow_daemons_dump_core --> on
allow_daemons_use_tty --> off
allow_execheap --> off
allow_execmem --> on
allow_execmod --> off
..........

2）setsebool
说明：设定selinux bool数值清单列表与内容
使用方式：setsebool [ -P ]  boolean value | bool1=val1 bool2=val2 bool3=val3......
参数配置： -P表示设定该项目永久套用
使用范例：
setsebool ftpd_disable_trans=on ( on 或者 1 )
setsebool -P ftpd_disable_trans=off ( off 或者 0 )

5、chcon
说明：变更档案目录的security context
使用方式：
chcon [OPTION]... CONTEXT FILE...
chcon [OPTION]... --reference=RFILE FILE...
参数如下：
-u USER：set user USER in the target security context
-r ROLE：set role ROLE in the target security context
-t TYPE：set type TYPE in the target security context
范例：
chcon -t var_t /etc/vsftpd/vsftpd.conf
chcon --reference=/var/www/html index.html
注意事项：若是变更于目录上，后续于该目录内建立的档案目录会套用目录本身type设定

6、restorecon
说明：恢复档案目录的预设的security Context
规格来源：/etc/selinux/<POLICY>/contexts/files/目录内的file_contexts与file_contexts.local
常用参数如下：
-r | -R：包含子目录与其下档案目录
-F：恢復使用预设的項目（就算是檔案符合存取规范）
-v：显示执行过程
使用方式：restorecon [FRrv] [-e excludedir ] pathname... ]
使用范例如下：
restorecon /etc/ntp.conf
restorecon -v /etc/ntp.conf
restorecon -v -F /etc/ntp.conf
手动配置新增恢复规则
1）档案名称
/etc/selinux/<POLICYTYPE>/contexts/files/file_contexts.local
2）新增配置范例
/var/ftp(/.*)?   system_u:object_r:public_content_t
3）注意
可以使用semanage程式来维护会比较方便

7、fixfiles
说明：修正档案目录的预设的security Context，依据/etc/selinux/<POLICY>/contexts/files/内相关档案修正
使用方式：
fixfiles { check | restore|[-F] relabel } [[dir] ... ]
fixfiles -R rpmpackage[,rpmpackage...] { check | restore }
参数：
-R：使用指定的rpm 套件所提供的檔案清單
使用范例：
fixfiles check /etc
fixfiles restore /etc
fixfiles -F relabel /
fixfiles -R setup check

8、audit2why
说明：检视SELinux audit讯息内容，提供检视/var/log/audit/audit.log内的记录资讯说明
使用范例：audit2why <  /var/log/audit/audit.log
注意：需要搭配启动auditd服务程式一起使用

9、sealert
说明：SELinux 讯息诊断用户端程序
参数如下：
-H, --html_output：使用网页格式输出（搭配 -a or -l 使用）
-l, --lookupid ID：检视指定ID的警示讯息
使用范例：
sealert -l xxxxx-xxxxx-xxxx
sealert -H -l xxxxx-xxxxx-xxxx > output.html
注意：需要搭配setroubleshoot服务一起使用
setroubleshoot服务启动后，会依据audit服务提供的资讯给予适当问题诊断，然后输出于/var/log/messages，该档案内会有相关输出资讯提供除错检视

10、semanage
说明：selinux policy维护工具
使用方式：semanage { login | user | port | interface | fcontext | translation} -l [-n]
使用范例：
semanage login -l
semanage user -l
semanage port -l
semanage port -a -t http_port_t -P tcp 81
semanage fcontext  -a  -t    httpd_sys_Context_t   "/home/users/(.+)/public_html(/.*)?“

11、secon
说明：检视程式、档案与使用者等相关SELinux Context
使用方式：
secon [-hVurtscmPRfLp] [CONTEXT]
secon [--file] FILE | [--link] FILE | [--pid] PID
参数：
-u, --user：show the user of the security context
-r, --role：show the role of the security context
-t, --type：show the type of the security context
-f, --file FILE：gets the context from the specified file FILE
-p, --pid PID：gets the context from the specified process PID
使用范例：
secon -u
secon -r
secon -t
secon --file /etc/passwd
secon --pid <pid>

參考文件： /etc/samba/smb.conf

#---------------
# SELINUX NOTES:
# 分享群組
# If you want to use the useradd/groupadd family of binaries please run:
# setsebool -P samba_domain_controller on
#

# 分享home目錄
# If you want to share home directories via samba please run:
# setsebool -P samba_enable_home_dirs on
#
# If you create a new directory you want to share you should mark it as
# "samba-share_t" so that selinux will let you write into it.
# Make sure not to do that on system directories as they may already have
# been marked with othe SELinux labels.
#
# Use ls -ldZ /path to see which context a directory has
#
# Set labels only on directories you created!
# To set a label use the following: chcon -t samba_share_t /path
#
# If you need to share a system created directory you can use one of the
# following (read-only/read-write):
# setsebool -P samba_export_all_ro on
# or
# setsebool -P samba_export_all_rw on
#
# If you want to run scripts (preexec/root prexec/print command/...) please
# put them into the /var/lib/samba/scripts directory so that smbd will be
# allowed to run them.
# Make sure you COPY them and not MOVE them so that the right SELinux context
# is applied, to check all is ok use restorecon -R -v /var/lib/samba/scripts

======================================================================
======================================================================
安装CentOS默认是开启SELinux的,会导致samba、ftp等应用程序无法访问相应目录,解决办法如下
开启Samba用户HOME目录权限

/usr/sbin/setsebool -P samba_enable_home_dirs=1

开启单个共享目录（path）权限

chcon -t samba_share_t path

开启所有共享目录
只读权限

/usr/sbin/setsebool -P samba_export_all_ro on

读写权限

/usr/sbin/setsebool -P samba_export_all_rw on

查看某个目录（path）是否开启了权限

ls -ldZ path

======================================================================
======================================================================
[root@rhel6 www]# getsebool -a |grep httpd
allow_httpd_anon_write --> off
allow_httpd_mod_auth_ntlm_winbind --> off
allow_httpd_mod_auth_pam --> off
allow_httpd_sys_script_anon_write --> off
httpd_builtin_scripting --> on
httpd_can_check_spam --> off
httpd_can_network_connect --> on
httpd_can_network_connect_cobbler --> off
httpd_can_network_connect_db --> off
httpd_can_network_relay --> off
httpd_can_sendmail --> off
httpd_dbus_avahi --> on
httpd_enable_cgi --> on
httpd_enable_ftp_server --> off
httpd_enable_homedirs --> off
httpd_execmem --> off
httpd_read_user_content --> off
httpd_setrlimit --> off
httpd_ssi_exec --> off
httpd_tmp_exec --> off
httpd_tty_comm --> on
httpd_unified --> on
httpd_use_cifs --> off
httpd_use_gpg --> off
httpd_use_nfs --> off
 
｛ftp｝
//打开Anonymous文件共享
chcon -R -t public_content_t /var/ftp
//设置一个可以上传文件的文件夹
chcon -t public_content_rw_t /var/ftp/incoming
//同时需要打开allow_ftpd_anon_write
setsebool -P allow_ftpd_anon_write=1
//设置用户可以访问家目录
setsebool -P ftp_home_dir 1
//以镜像方式运行ftp服务器
setsebool -P ftpd_is_daemon 1
//彻底关闭SELinux对FTP的保护
setsebool -P ftpd_disable_trans 1
 
｛httpd｝
//特定的域写入权限
setsebool -P allow_httpd_anon_write=1
//或者
setsebool -P allow_httpd_sys_script_anon_write=1
//打开http 的cgi功能
setsebool -P httpd_enable_cgi 1
//打开http访问用户家目录
setsebool -P httpd_enable_homedirs 1
chcon -R -t httpd_sys_content_t ~user/public_html
//运行http登陆终端
setsebool -P httpd_tty_comm 1
//打开http服务互不干扰
setsebool -P httpd_unified 0
//可装载模块作为http服务在同样的context下服务
setsebool -P httpd_builtin_scripting 0
//打开http脚本访问网络
setsebool -P httpd_can_network_connect 1
//禁用suexec传输
setsebool -P httpd_suexec_disable_trans 1
//停止SELinux对httpd的保护
setsebool -P httpd_disable_trans 1
service httpd restart
 
｛named｝
//打开更新主域
setsebool -P named_write_master_zones 1
//停止SELinux对named的保护
setsebool -P named_disable_trans 1
service named restart
 
｛nfs｝
//设置nfs为只读
setsebool -P nfs_export_all_ro 1
//设置nfs可写
setsebool -P nfs_export_all_rw 1
//打开nfs家目录访问
setsebool -P use_nfs_home_dirs 1
 
｛samba｝
//打开另外的目录共享
chcon -t samba_share_t /directory
//打开多域共享
setsebool -P allow_smbd_anon_write=1
//将服务器设置成samba服务器，并允许家目录共享
setsebool -P samba_enable_home_dirs 1
//用其他samba服务器共享本机的家目录
setsebool -P use_samba_home_dirs 1
//停止SELinux对samba的保护
setsebool -P smbd_disable_trans 1
service smb restart
 
｛rsync｝
//打开rsync共享
chcon -t public_content_t /directories
//打开多域共享
setsebool -P allow_rsync_anon_write=1
//停止SELinux对rsync的保护
setsebool -P rsync_disable_trans 1
 
｛kerberos｝
//打开kerberos
setsebool -P allow_kerberos 1
//以 kadmind 或 krb5kdc 方式运行
setsebool -P krb5kdc_disable_trans 1
service krb5kdc restart
setsebool -P kadmind_disable_trans 1
service kadmind restart
 
｛nis｝
//打开nis支持
setsebool -P allow_ypbind 1

======================================================================
======================================================================
SELinux 的安全防护措施主要集中在各种网络服务的访问控制。上文（http://www.ibm.com/developerworks/cn/linux/l- cn-selinux-services1/index.html ）介绍了 Apache 、Samba、NFS 三种服务的 SElinux 设置，本文介绍 SElinux 下 vsftp 、MySQL、Bind DNS 三种服务的 SElinux 设置。



SELinux 环境下的 FTP 配置

vsftp 的 SELinux 的文件类型


　　SElinux 环境中，vsftp 服务器的 vsftpd 守护进程都是在受限的 ftpd_t 域中运行。并且和其他受限的网络服务相互隔离。下面的示例演示的是 SELinux 下的 vsftpd 进程


 #ps -eZ |grep vsftpd 
 unconfined_u:system_r:ftpd_t:s0-s0:c0.c1023 1994 ? 00:00:00 vsftpd 



　　SELinux 策略规定 vsftpd 文件访问和进程交互的限制。例如一个通过认证的本地用户不能读写自己的主目录的文件。另外 vsftpd 不能访问 NFS 或者 CIFS 文件系统，匿名用户没有写文件的访问权限，即使 /etc/vsftpd/vsftpd.conf 配置文件中开放了读写权限也是如此。通常注册后的匿名用户只能读取 /var/ftp 目录中的文件，文件类型是 public_content_t，它资源其他服务器（Apache , Samba, NFS）也可以访问 public_content_t 类型的文件 。SElinux 一共定义了两种文件类型用于设置 vsftp 服务器。


　　public_content_t vsftpd：可以读取的文件和目录类型是 public_content_t。其他服务如 Apache、Samba 和 NFS 也可以，但是 public_content_t 类型的文件不能被写入，即使 Linux 权限允许。如果你需要写入或者修改，必须使用 public_content_rw_t 的类型。


　　public_content_rw_t：可以读取和写入的文件和目录类型是 public_content_rw_t，其他服务其他服务如 Apache，Samba 和 NFS 也可以，不过必须开放相关的布尔变量。


vsftp 的布尔变量


SELinux 对 FTP 的限制非常严格，不过系统管理员可以利用布尔值变量调整 SELinux 策略设置，定制 FTP 服务器功能。


下面是常用的布尔变量：


    allow_ftpd_anon_write ：关闭这个布尔变量会阻止 vsftpd 读取 public_content_rw_t 类型的文件和目录。如果允许用户通过 FTP 上传文件。必须开放这个布尔变量。
    allow_ftpd_full_access：当开放这个布尔变量时只有 Linux（DAC）的权限来控制访问，通过验证的用户可以读取和写入标记为 public_content_t 或 public_content_rw_t 类型的文件。
    allow_ftpd_use_cif：当开放这个布尔变量时 vsftpd 允许 cifs_t 类型的文件和目录，因此这个布尔变量启用，可以让你的 FTP 服务器可以使用 Samba 文件系统。
    allow_ftpd_use_nfs vsftpd：的当开放这个布尔变量时 vsftpd 允许 nfs_t 类型的文件和目录，因此这个布尔变量启用，可以让你的 FTP 服务器可以使用 NFS 文件系统。
    ftp_home_dir：当开放这个布尔变量时认证用户可以读写自己的主目录中的文件。
    ftpd_connect_db：当开放这个布尔变量时允许 vsftpd 连接数据库。
    httpd_enable_ftp_server：当开放这个布尔变量时容许的 httpd 作为 FTP 服务器，并且监听 FTP 端口。
    tftp_anon_write：当开放这个布尔变量时允许 TFTP 访问一个公共的目录。


如果希望 FTP 服务器可以使用 NFS 和 Samba 文件系统，可以使用如下命令：


 #setsebool -P allow_ftpd_use_nfs on 
 #setsebool -P allow_ftpd_use_cifs  on 



　　另外针对启动 SElinux 后本地用户不能注册到 FTP 服务器，可以使用如下命令解决：


#setsebool -P ftp_home_dir on


　　假设 /var/ftp/forum 是一个公共论坛，供 ftp 用户查询和读写其中的文件，那么就需要确保 ftp 服务器可以读写修改 /var/ftp/forum 目录，此时可以使用命令把 /var/ftp/forum 目录的属性设置为 public_content_rw_t：


 #semanage fcontext -a -t public_content_rw_t "/var/ftp/forum (/.*)?"
 #restorecon -R -v /var/ftp/forum 



　　另外还有使用命令修改 /var/ftp/forum 的访问权限，开放布尔变量：


 #chmod 777 /var/ftp/forum 
 #setsebool -P allow_ftpd_use_cifs  on 



配置实例


开放用户主目录


　　SELinux 环境下 vsftpd 通常只允许匿名用户注册，以 FTP 方式注册后，本地用户无法访问自己的主目录，无法显示文件，也无法上传下载。这是 SELinux 策略造成的，要开放用户主目录，请使用如下办法。


　　首先使用 root 权限修改 /etc/vsftpd/vsftpd.conf 文件，设置


 local-enable=YES 


　　然后使用命令重启服务：


#/etc/rc.d/init.d/vsftpd start


然后开放 ftp_home_dir 布尔变量即可：


 #setsebool – P ftp_home_dir on 


设置本地用户可以上传和下载文件

这个例子介绍如何建立一个存储位置 /myftp/pub，供本地用户使用 ftp 下载和上传文件。

首先创建一个目录结构和设置权限：

 #mkdir –P /myftp/pub 
 #chown user1:root /myftp/pub 
 #chmod 777 /myftp/pub 


使用 semanage fcontext 和 restorecon 命令设置顶级目录 /myftp 的文件属性是 public_content_t

 #semanage fcontext -a -t public_content_t /myftp 
 #restorecon -R -v /myftp/ 


使用 semanage fcontext 和 restorecon 命令设置顶级目录 /myftp 的 ftp 子目录的文件属性是 public_content_rw_t

 #semanage fcontext -a -t public_content_rw_t "/myftp/pub(/.*)?"
 #restorecon -R -v /myftp/pub 


下面开放布尔值变量：

 #setsebool – P ftp_home_dir on 
 #setsebool -P allow_ftpd_anon_write on 


完成上述设置后，本地系统用户可以访问自己的主目录，把文件上传到目录 /myftp/pub ，但是不能上传到 /myftp 目录。

 $ ftp localhost 
 Connected to localhost (127.0.0.1). 
 220 (vsFTPd 2.1.0) 
 Name (localhost:username): 
 331 Please specify the password. 
 Password: Enter the correct password 
 230 Login successful. 
 Remote system type is UNIX. 
 Using binary mode to transfer files. 
 ftp> put ftpupload /myftp/pub/ftpupload 
 local: ftpupload remote: ftpupload 
 227 Entering Passive Mode (127,0,0,1,241,41). 
 150 Ok to send data. 
 226 File receive OK. 
 ftp> quit 
 221 Goodbye. 


匿名文件上传设置

这个例子介绍如何建立一个存储位置 /var/ftp/pub，供匿名用户使用上传文件。

首先创建一个目录结构和设置权限：

 #mkdir – P /var/ftp/pub 
 #chmod 777 /var/ftp/pub 


查询当前文件属性：

 #ls – dZ /var/ftp/pub 
 drwxr-xr-x. root root system_u:object_r:public_content_t:s0 /var/ftp/pub 


下面要把 public_content_t 修改为 public_content-rw_t 使用命令：

 #semanage fcontext -a -t public_content_rw_t "/var/ftp/pub(/.*)?"
 #restorecon -R -v /var/ftp/pub 


开放布尔变量并且查询使用命令：

 #setsebool -P allow_ftpd_anon_write on 
 #getsebool allow_ftpd_anon_write 
 allow_ftpd_anon_write --> on 


修改配置文件 /etc/vsftpd/vsftpd.conf 删除这一行“#annon_upload_enable=YES”的 # 符号，重启 ftp 服务。

 #service vsftpd start 


下面把文件 /tmp/ftpupload 复制到目录 /var/ftp 下作为测试文件。然后运行 ftp 命令以 anonymous 注册。操作如下：

 #cp /tmp/ ftpupload /var/ftp/ftpupload 
 #ftp localhost 
 Connected to localhost (127.0.0.1). 
 220 (vsFTPd 2.1.0) 
 Name (localhost:username): anonymous 
 331 Please specify the password. 
 Password: Enter the correct password 
 230 Login successful. 
 Remote system type is UNIX. 
 Using binary mode to transfer files. 
 ftp> put ftpupload 
 local: ftpupload remote: pub/ftpupload 
 227 Entering Passive Mode (127,0,0,1,241,41). 
 150 Ok to send data. 
 226 File receive OK. 
 ftp> quit 
 221 Goodbye. 


回页首

SELinux 环境下的 MySQL 配置

MySQL 的 SELinux 文件类型

SELinux 环境中，MySQL 服务器的守护进程都是在受限的 mysqld_t 域中运行。并且和其他受限的网络服务相互隔离。下面的示例演示的是 SElinux 下的 mysqld 进程

 #ps -eZ | grep mysqld 
 unconfined_u:system_r:mysqld_safe_t:s0 6035 pts/1 00:00:00 mysqld_safe 
 unconfined_u:system_r:mysqld_t:s0 6123 pts/1   00:00:00 mysqld 


下面是 SELinux 针对 MySQL 定义的的文件类型：

mysqld_db_t 这种文件类型用于标记 MySQL 数据库的位置。在红帽企业 Linux 中数据库的默认位置是 /var/lib/mysql。如果 MySQL 数据库的位置发生了变化，新的位置必须使用这种类型。

mysqld_etc_t 这种文件类型用于标记 MySQL 的主配置文件中的 /etc/my.cnf 文件和 /etc/mysql 目录中的文件。

mysqld_exec_t 这种文件类型用于标记 /usr/libexec/mysqld 程序文件。

mysqld_initrc_exec_t 这种文件类型用于标记 MySQL 的初始化文件 /etc/rc.d/init.d/mysqld。

mysqld_log_t 这种文件类型用于标记日志文件。

mysqld_var_run_t 这种文件类型用于标记 /var/run/mysqld 目录中文件，尤其是 /var/run/mysqld/mysqld.pid 和 /var/run/mysqld/mysqld.sock。

MySQL 的布尔变量

allow_user_mysql_connect 当开放这个布尔变量时允许用户连接数据库。

exim_can_connect_db 当开放这个布尔变量时允许 exim 邮件程序访问数据库服务器。

ftpd_connect_db 当开放这个布尔变量时允许 ftpd 进程访问数据库服务器。

httpd_can_network_connect_db 当开放这个布尔变量时允许 httpd 进程访问数据库服务器。

配置实例

修改 MySQL 的存储数据库位置

在红帽企业 Linux 6 中数据库的默认位置是 /var/lib/mysql，文件类型是 mysqld_db_t。下面把它修改为 /opt/mysql，步骤如下：

首先查看缺省情况下 MySQL 的存储数据库位置（/var/lib/mysql）和 SElinux 属性：

 # ls -lZ /var/lib/mysql 
 drwx------. mysql mysql unconfined_u:object_r:mysqld_db_t:s0 mysql 


记录下 MySQL 的存储数据库位置（/var/lib/mysql）的 SElinux 属性，然后停止 MySQL，然后建立一个新的目录，把原来的数据库文件复制到新目录，并且设置 SElinux 属性。

 #service mysqld stop 
 #mkdir -p /opt/mysql 
 #cp -R /var/lib/mysql/* /opt/mysql/ 
 #chmod 755 /opt/mysql 
 #chown -R mysql:mysql /opt/mysql 
 #semanage fcontext -a -t mysqld_db_t "/opt/mysql(/.*)?": 
 #restorecon -R -v /opt/mysql 


修改配置文件 /etc/my.cnf 重启 MySQL

 #vi /etc/my.cnf 
 [mysqld] 
 datadir=/opt/mysql 
 # service mysqld start 


回页首

SELinux 环境下的 DNS 配置

Bind 的 SELinux 文件类型

named_zone_t 这个文件类型用于主区域文件。其他服务不能修改此类型的文件。

named_cache_t 默认情况下 named 进程可以读写这种类型的标记的文件，无需另外的布尔值设置。

Bind 的布尔变量

named_write_master_zones 当关闭这个布尔变量时不允许 named 进程读写主区配置文件。

named_disable_trans 当关闭这个布尔变量时不保护 named 进程。

配置实例

SElinux 对 Bind DNS 服务器的限制不多。默认情况下 SElinux 的策略文件规定不允许 named 进程写主区配置文件。如果允许 named 进程更新主区配置文件，需要开放下面的布尔值变量：

 #setsebool -P named_write_master_zones=1 


也可以禁止 SElinux 保护 named 守护进程，使用命令：

 # setsebool -P named_disable_trans=1 


然后重启 named 进程：

 #service named restart 


回页首

总结

SELinux 的安全防护措施主要集中在各种网络服务的访问控制。对于像 Apache 、Samba、NFS、vsftp 、MySQL、Bind DNS 服务来说，系统默认配置的 SELinux 仅仅开放了最基本的运行需求。至于连接外部网络、运行脚本、访问用户目录、共享文件等，必须经过一定的 SELinux 策略调整才能充分发挥网络服务器的作用。很多用户一直觉得 SELinux 的安全级别设置十分麻烦，因此有人经常关闭 SELinux 不让其工作，这样做是不对的。其实安全性和应用性就是有这种矛盾，系统管理员要寻找一定的安全中间点。 
