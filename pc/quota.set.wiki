 = Quota 流程-1：文件系统支持 =
mount -o remount,usrquota,grpquota /smbahome
mount | grep smbhome
    /dev/sdb2 on /smbhome type ext4 (rw,relatime,seclabel,quota,usrquota,grpquota,data=ordered) 
    
    事实上，当你重新挂载时，系统会同步升级 /etc/mtab 这个文件， 所以你必须要确定 /etc/mtab 已经加入 usrquota, grpquota 的支持到你所想要配置的文件系统中。 另外也要特别强调，使用者与群组的 quota 文件系统支持参数分别是：usrquota, grpquota 
    不过手动挂载的数据在下次重新挂载就会消失，因此最好写入配置档中啊！直接修改 /etc/fstab 成为底下这个样子：
    
umount /home
mount -a
mount | grep home
/dev/sdb2 on /smbhome type ext4 (rw,relatime,seclabel,quota,usrquota,grpquota,data=ordered)

= Quota 流程-2：创建 quota 记录档 =
 quotacheck [-avugfM] [/mount_point]
选项与参数：
    -a  ：扫瞄所有在 /etc/mtab 内，含有 quota 支持的 filesystem
    -u  ：针对使用者扫瞄文件与目录的使用情况，会创建 aquota.user
    -g  ：针对群组扫瞄文件与目录的使用情况，会创建 aquota.group
    -v  ：显示扫瞄过程的资讯；
    -f  ：强制扫瞄文件系统，并写入新的 quota 配置档 (危险)
    -M  ：强制以读写的方式扫瞄文件系统，只有在特殊情况下才会使用。

quotacheck 的选项你只要记得『 -avug 』一起下达即可！那个 -f 与 -M 是在文件系统可能已经启动 quota 了， 但是你还想要重新扫瞄文件系统时，系统会要求你加入那两个选项啦 (担心有其他人已经使用 quota 中)！平时没必要不要加上那两个项目。

# 针对整个系统含有 usrquota, grpquota 参数的文件系统进行 quotacheck 扫瞄
quotacheck -avug
ll -d /smbhome/a*
-rw-------. 1 root root 7168 12月 26 23:47 /smbhome/aquota.group
-rw-------. 1 root root 9216 12月 26 23:47 /smbhome/aquota.user

= 作 Quota 流程-3：Quota 启动、 关闭与限制值配置 =
制作好 Quota 配置档之后，接下来就是要启动 quota 了！启动的方式很简单！使用 quotaon ，至於关闭就用 quotaoff 即可

== quotaon ：启动 quota 的服务 ==
[root@www ~]# quotaon [-avug]
[root@www ~]# quotaon [-vug] [/mount_point]
选项与参数：
-u  ：针对使用者启动 quota (aquota.user)
-g  ：针对群组启动 quota (aquota.group)
-v  ：显示启动过程的相关信息；
-a  ：根据 /etc/mtab 内的 filesystem 配置启动有关的 quota ，若不加 -a 的话，
      则后面就需要加上特定的那个 filesystem 喔！

# 由於我们要启动 user/group 的 quota ，所以使用底下的语法即可
[root@www ~]# quotaon -auvg
/dev/hda3 [/home]: group quotas turned on
/dev/hda3 [/home]: user quotas turned on

# 特殊用法，假如你的启动 /var 的 quota 支持，那么仅启动 user quota 时
[root@www ~]# quotaon -uv /var

== quotaoff ：关闭 quota 的服务 ==

[root@www ~]# quotaoff [-a]
[root@www ~]# quotaoff [-ug] [/mount_point]
选项与参数：
-a  ：全部的 filesystem 的 quota 都关闭 (根据 /etc/mtab)
-u  ：仅针对后面接的那个 /mount_point 关闭 user quota
-g  ：仅针对后面接的那个 /mount_point 关闭 group quota

这个命令就是关闭了 quota 的支持！我们这里需要练习 quota 实作，所以这里请不要关闭他喔！ 接下来让我们开始来配置使用者与群组的 quota 限额吧！

= edquota ：编辑帐号/群组的限值与宽限时间 =

edquota 是 edit quota 的缩写，所以就是用来编辑使用者或者是群组限额的命令罗。我们先来看看 edquota 的语法吧， 看完后再来实际操作一下。

[root@www ~]# edquota [-u username] [-g groupname]
[root@www ~]# edquota -t  <==修改宽限时间
[root@www ~]# edquota -p 范本帐号 -u 新帐号
选项与参数：
-u  ：后面接帐号名称。可以进入 quota 的编辑画面 (vi) 去配置 username 的限制值；
-g  ：后面接群组名称。可以进入 quota 的编辑画面 (vi) 去配置 groupname 的限制值；
-t  ：可以修改宽限时间。
-p  ：复制范本。那个 范本帐号 为已经存在并且已配置好 quota 的使用者，
      意义为『将 范本帐号 这个人的 quota 限制值复制给 新帐号 』！

范例一：配置 dmtsai 这个使用者的 quota 限制值
[root@www ~]# edquota -u dmtsai

isk quotas for user myquota1 (uid 710):
  Filesystem    blocks    soft    hard  inodes  soft  hard
  /dev/hda3         80  250000  300000      10     0     0
# 鸟哥使用 1000 去近似 1024 的倍数！比较好算啦！然后就可以储存后离开罗！
#
# 将 myquota1 的限制值复制给其他四个帐号
# edquota -p myquota1 -u myquota2
# edquota -p myquota1 -u myquota3
# edquota -p myquota1 -u myquota4
# edquota -p myquota1 -u myquota5

= 实作 Quota 流程-4：Quota 限制值的报表 =
quota 的报表主要有两种模式，一种是针对每个个人或群组的 quota 命令，一个是针对整个文件系统的 repquota 命令。 我们先从较简单的 quota 来介绍！你也可以顺道看看你的配置值对不对啊！

== quota ：单一用户的 quota 报表 ==

# quota [-uvs] [username]
# quota [-gvs] [groupname]
选项与参数：
-u  ：后面可以接 username ，表示显示出该使用者的 quota 限制值。若不接 username 
      ，表示显示出运行者的 quota 限制值。
-g  ：后面可接 groupname ，表示显示出该群组的 quota 限制值。
-v  ：显示每个用户在 filesystem 的 quota 值；
-s  ：使用 1024 为倍数来指定单位，会显示如 M 之类的单位！

=== # 直接使用 quota 去显示出 myquota1 与 myquota2 的限额 ===
quota -uvs myquota1 myquota2

# 这个命令显示出来的数据跟 edquota 几乎是一模一样的！只是多了个 grace 项目。
# 你会发现 grace 底下没有任何数据，这是因为我们的使用量 (80) 尚未超过 soft

=== # 显示出 myquotagrp 的群组限额 ===
quota -gvs myquotagrp

Disk quotas for group myquotagrp (gid 713):
   Filesystem  blocks  quota  limit   grace   files   quota   limit   grace
    /dev/hda3     400   879M   977M              50       0       0

由於使用常见的 K, M, G 等单位比较好算，因此上头我们使用了『 -s 』的选项，就能够以 M 为单位显示了。 不过由於我们使用 edquota 配置限额时，使用的是近似值 (1000) 而不是实际的 1024 倍数， 所以看起来会有点不太一样喔！由於 quota 仅能针对某些用户显示报表，如果要针对整个 filesystem 列出报表时， 那个可爱的 repquota 就派上用场啦！

== repquota ：针对文件系统的限额做报表 ==

repquota -a [-vugs]

选项与参数：
-a  ：直接到 /etc/mtab 搜寻具有 quota 标志的 filesystem ，并报告 quota 的结果；
-v  ：输出的数据将含有 filesystem 相关的细部资讯；
-u  ：显示出使用者的 quota 限值 (这是默认值)；
-g  ：显示出个别群组的 quota 限值。
-s  ：使用 M, G 为单位显示结果

# 查询本案例中所有使用者的 quota 限制情况：
repquota -auvs

*** Report for user quotas on device /dev/hda3    <==针对 /dev/hda3
Block grace time: 14days; Inode grace time: 7days <==block 宽限时间为 14 天
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      --    651M       0       0              5     0     0
myquota1  --      80    245M    293M             10     0     0
myquota2  --      80    245M    293M             10     0     0
myquota3  --      80    245M    293M             10     0     0
myquota4  --      80    245M    293M             10     0     0
myquota5  --      80    245M    293M             10     0     0

Statistics:  <==这是所谓的系统相关资讯，用 -v 才会显示
Total blocks: 9
Data blocks: 2
Entries: 22
Used average: 11.000000

根据这些资讯，您就可以知道目前的限制情况罗！ ^_^！怎样， Quota 很简单吧！你可以赶紧针对你的系统配置一下磁碟使用的守则，让你的用户不会抱怨磁碟怎么老是被耗光！

= setquota ：直接於命令中配置 quota 限额 =
    如果你想要使用 script 的方法来创建大量的帐号，并且所有的帐号都在创建时就给予 quota ，那该如何是好？ 其实有两个方法可以考虑：
    先创建一个原始 quota 帐号，再以『 edquota -p old -u new 』写入 script 中；
    直接以 setquota 创建用户的 quota 配置值。
    不同於 edquota 是呼叫 vi 来进行配置，setquota 直接由命令输入所必须要的各项限制值。 他的语法有点像这样：

# setquota [-u|-g] 名称 block(soft) block(hard)  inode(soft) inode(hard) 文件系统

# 观察原始的 myquota5 限值，并给予 soft/hard 分别为 100000/200000
# quota -uv myquota5
Disk quotas for user myquota5 (uid 714): 
   Filesystem blocks  quota  limit  grace files  quota  limit  grace
    /dev/hda3     80 250000 300000           10      0      0

# setquota -u myquota5 100000 200000 0 0 /home

# quota -uv myquota5

Disk quotas for user myquota5 (uid 714): 
   Filesystem blocks  quota  limit  grace files  quota  limit  grace
    /dev/hda3     80 100000 200000           10      0      0
# 看吧！真的有改变过来！这就是 quota 的简单脚本配置语法！

