
= 程序员应该知道的100个Vim命令（上） =

自从70年代起，Vi就是程序员最好的朋友之一既是你是Vi菜鸟都无所谓，这里为你准备了100条实用的命令列表，以主题的形式组织，他们能让你的代码生活更美好。今天就来点纯练手的东西吧，以后再每个专题说说
== 基本命令 ==

:e filename   打开文件编辑
:w    保存
:q    退出Vim
:w!    保存文件退出Vim

== 搜索 ==

/word    从顶部往底部搜索word
?word    从底部往顶部搜索word 
/jo[ha]n       搜索john或joan
/\< the        搜索the或theatre 或then（只要是the开头就行）
/the\>         搜索the或breathe（只要是the结尾就行）
/\< the\>      只搜索the
/\< ....\>     搜索长度为4个字符的字符串
/\<fred\>      搜索fred，alfred 或者 frederick都不能匹配
/fred\|joe     搜fred或joe
/\<\d\d\d\d\>  搜索4位数字的字符串
/^\n\{3}       查找3个空行的地方
:bufdo /searchstr/    在所有打开的（缓冲区）文件中搜索searchstr
:bufdo %s/pattern/replace/ge | update   所有文件中替换

== 替换 ==

:%s/old/new/g          用new替换文件中出现的所有old
:%s/old/new/gc         与上面这条的作用一样，只不过每替换一个就要确认一次
:2,35s/old/new/g       用new替换2到35行的new
:5,$s/old/new/g        替换4行之后所有old
:%s/^/hello/g          用hello替换所有行首，相当于在行首插入hello
:%s/$/Harry/g          在所有行末加入Harray
:%s/onward/forward/gi  用forward替换onward，忽略大小写
:%s/ *$//g         删除所有行末的空格
:%s/^ *//g         删除所有行首的空格
:g/string/d        删除所有出现有string的行
:v/string/d        删除所有不包含string的行
:s/Bill/Steve/     用Steve替换当前行首次出现的Bill
:s/Bill/Steve/g    用Steve替换当前行出现的所有Bill
:%s#<[^>]\+>##g    删除所有HTMl标签，保留文本
dit   保留当前行html标签，删除文本
:%s/^\(.*\)\n\1$/\1/    Delete lines which appears twice
Ctrl+a    递增当前光标出的数字
Ctrl+x    递减当前光标处的数字
ggVGg?    将全文转换为rot13码，这是一种简单暗号语Rot13，重复执行此命令回复原样

== 大小写 ==

Vu    当前行转换为小写
VU    当前行转换为大写，当然对中文无效
g~~    大小写置换
vEU    选择性的转换为大小，从光标起始处到
vE~    也是将选中的大写转小写，小写转大写。
ggguG    全文小写，其实我们可以拆分3个命令gg/gu/来记忆
:set ignorecase    搜索时忽略大小写

Basics

:e filename 	Open filename for edition
:w 	Save file
:q 	Exit Vim
:w! 	Exit Vim without saving
Search

/word 	Search word from top to bottom
?word 	Search word from bottom to top
/jo[ha]n 	Search john or joan
/\< the 	Search the, theatre or then
/the\> 	Search the or breathe
/\< the\> 	Search the
/\< ¦.\> 	Search all words of 4 letters
/\/ 	Search fred but not alfred or frederick
/fred\|joe 	Search fred or joe
/\<\d\d\d\d\> 	Search exactly 4 digits
/^\n\{3} 	Find 3 empty lines
:bufdo /searchstr/ 	Search in all open files
Replace

:%s/old/new/g 	Replace all occurences of old by new in file
:%s/old/new/gw 	Replace all occurences with confirmation
:2,35s/old/new/g 	Replace all occurences between lines 2 and 35
:5,$s/old/new/g 	Replace all occurences from line 5 to EOF
:%s/^/hello/g 	Replace the begining of each line by hello
:%s/$/Harry/g 	Replace the end of each line by Harry
:%s/onward/forward/gi 	Replace onward by forward, case unsensitive
:%s/ *$//g 	Delete all white spaces
:g/string/d 	Delete all lines containing string
:v/string/d 	Delete all lines containing which didn’t contain string
:s/Bill/Steve/ 	Replace the first occurence of Bill by Steve in current line
:s/Bill/Steve/g 	Replace Bill by Steve in current line
:%s/Bill/Steve/g 	Replace Bill by Steve in all the file
:%s/\r//g 	Delete DOS carriage returns (^M)
:%s/\r/\r/g 	Transform DOS carriage returns in returns
:%s#<[^>]\+>##g 	Delete HTML tags but keeps text
:%s/^\(.*\)\n\1$/\1/ 	Delete lines which appears twice
Ctrl+a 	Increment number under the cursor
Ctrl+x 	Decrement number under cursor
ggVGg? 	Change text to Rot13
Case

Vu 	Lowercase line
VU 	Uppercase line
g~~ 	Invert case
vEU 	Switch word to uppercase
vE~ 	Modify word case
ggguG 	Set all text to lowercase
:set ignorecase 	Ignore case in searches
:set smartcase 	Ignore case in searches excepted if an uppercase letter is used
:%s/\<./\u&/g 	Sets first letter of each word to uppercase
:%s/\<./\l&/g 	Sets first letter of each word to lowercase
:%s/.*/\u& 	Sets first letter of each line to uppercase
:%s/.*/\l& 	Sets first letter of each line to lowercase
Read/Write files

:1,10 w outfile 	Saves lines 1 to 10 in outfile
:1,10 w >> outfile 	Appends lines 1 to 10 to outfile
:r infile 	Insert the content of infile
:23r infile 	Insert the content of infile under line 23
File explorer

:e . 	Open integrated file explorer
:Sex 	Split window and open integrated file explorer
:browse e 	Graphical file explorer
:ls 	List buffers
:cd .. 	Move to parent directory
:args 	List files
:args *.php 	Open file list
:grep expression *.php 	Returns a list of .php files contening expression
gf 	Open file name under cursor
Interact with Unix

:!pwd 	Execute the pwd unix command, then returns to Vi
!!pwd 	Execute the pwd unix command and insert output in file
:sh 	Temporary returns to Unix
$exit 	Retourns to Vi
Alignment

:%!fmt 	Align all lines
!}fmt 	Align all lines at the current position
5!!fmt 	Align the next 5 lines
Tabs

:tabnew 	Creates a new tab
gt 	Show next tab
:tabfirst 	Show first tab
:tablast 	Show last tab
:tabm n(position) 	Rearrange tabs
:tabdo %s/foo/bar/g 	Execute a command in all tabs
:tab ball 	Puts all open files in tabs
Window spliting

:e filename 	Edit filename in current window
:split filename 	Split the window and open filename
ctrl-w up arrow 	Puts cursor in top window
ctrl-w ctrl-w 	Puts cursor in next window
ctrl-w_ 	Maximise current window
ctrl-w= 	Gives the same size to all windows
10 ctrl-w+ 	Add 10 lines to current window
:vsplit file 	Split window vertically
:sview file 	Same as :split in readonly mode
:hide 	Close current window
:­nly 	Close all windows, excepted current
:b 2 	Open #2 in this window
Auto-completion

Ctrl+n Ctrl+p (in insert mode) 	Complete word
Ctrl+x Ctrl+l 	Complete line
:set dictionary=dict 	Define dict as a dictionnary
Ctrl+x Ctrl+k 	Complete with dictionnary
Marks

mk 	Marks current position as k
˜k 	Moves cursor to mark k
d™k 	Delete all until mark k
Abbreviations

:ab mail mail@provider.org 	Define mail as abbreviation of mail@provider.org
Text indent

:set autoindent 	Turn on auto-indent
:set smartindent 	Turn on intelligent auto-indent
:set shiftwidth=4 	Defines 4 spaces as indent size
ctrl-t, ctrl-d 	Indent/un-indent in insert mode
>> 	Indent
<< 	Un-indent
Syntax highlighting

:syntax on 	Turn on syntax highlighting
:syntax off 	Turn off syntax highlighting
:set syntax=perl 	Force syntax highlighting



个人常用的VIM命令列表
分类： VIM 2010-12-14 23:07 308人阅读 评论(0) 收藏 举报
vimstringinclude文档cmdn2

form: http://blog.csdn.net/AbnerChai/archive/2005/09/03/470824.aspx


移动光标
上:k nk:向上移动n行 9999k或gg可以移到第一行 G移到最后一行
下:j nj:向下移动n行
左:h nh:向左移动n列
右:l nl:向右移动n列

w：光标以单词向前移动 nw：光标向前移动n个单词 光标到单词的第一个字母上
b：与w相反
e: 光标以单词向前移动 ne：光标向前移动n个单词 光标到单词的最后一个字母上
ge:与e相反

$:移动光标到行尾 n$:移动到第n行的行尾
0（Num）：移动光标到行首
^:移动光标到行首第一个非空字符上去

f<a>:移动光标到当前行的字符a上，nf<a>移动光标到当前行的第n个a字符上
F:相反

%:移动到与制匹配的括号上去（），{}，[]，<>等。

nG:移动到第n行上 G:到最后一行

CTRL＋G 得到当前光标在文件中的位置

向前翻页：CTRL+F
向下移动半屏：CTRL＋G
向后翻页：CTRL+B

存盘：
:q! :不存盘退出
:e! :放弃修改文件内容，重新载入该文件编辑
:wq ：存盘退出

dw：删除一个单词,需将光标移到单词的第一个字母上，按dw，如果光标在单词任意位置，用daw
dnw:删除n个单词
dne:也可，只是删除到单词尾
dnl:向右删除n个字母
dnh:向左删除n个字母
dnj:向下删除n行
dnk:向上删除n行
d$：删除当前光标到改行的行尾的字母
dd：删除一行
cnw[word]:将n个word改变为word
cc:改变整行
C$:改变到行尾

J: 删除换行符，将光标移到改行，按shift+j删除行尾的换行符，下一行接上来了.
u: 撤销前一次的操作
shif+u(U):撤销对该行的所有操作。

:set showmode :设置显示工作模式

o：在当前行的下面另起一行
O（shift+o)：在当前行的上面另起一行

nk或nj：光标向上或向下移n行，n为数字
an!【ESC】：在行后面加n个感叹号(!)
nx:执行n次x(删除)操作

ZZ：保存当前文档并退出VIM

:help ：查看帮助文档，在这之中，按CTRL+] 进入超连接，按CTRL＋O 返回。
:help subject :看某一主题的帮助，ZZ 退出帮助

:set number / set nonumber :显示/不显示行号
:set ruler /set noruler:显示/不显示标尺

/pattern 正方向搜索一个字符模式
?pattern 反方向搜索一个字符模式
然后按n 继续向下找

把光标放到某个单词上面，然后按×号键，表示查找这个单词
查找整个单词：//<word/>

:set hlsearch 高亮显示查找到的单词
:set nohlsearch 关闭改功能

m[a-z]:在文中做标记，标记号可为a-z的26个字母，用`a可以移动到标记a处

r:替换当前字符
nr字符：替换当前n个字符

查找替换：
way1:
/【word】 :查找某个word
cw【newword】:替换为新word
n: 继续查找
.: 执行替换

way2:
:s/string1/string2/g:在一行中将string1替换为string2,g表示执行 用c表示需要确认
:num1,num2 s/string1/string2/g:在行num1至num2中间将string1替换为string2
:1,$ s/string1/string2/g:在全文中将string1替换为string2

 


v:进入visual 模式
【ESC】退出
V:shift+v 进入行的visual 模式
CTRL+V:进如块操作模式用o和O改变选择的边的大小。

粘贴：p，这是粘贴用x或d删除的文本
复制：
ynw：复制n个单词
yy：复制一行
ynl:复制n个字符
y$:复制当前光标至行尾处
nyy:拷贝n行
完了用p粘贴

:split:分割一个窗口
:split file.c ：为另一个文件file.c分隔窗口
:nsplit file.c: 为另一个文件file.c分隔窗口，并指定其行数
CTRL＋W在窗口中切换
:close：关闭当前窗口

在所有行插入相同的内容如include<，操作方法如下：
将光标移到开始插入的位置，按CTRL+V进入VISUAL模式，选择好模块后
按I（shift+i)，后插入要插入的文本，按[ESC]完成。

:read file.c 将文件file.c的内容插入到当前光标所在的下面
:0read file.c 将文件file.c的内容插入到当前文件的开始处(第0行）
:nread file.c 将文件file.c的内容插入到当前文件的第n行后面
:read !cmd :将外部命令cmd的输出插如到当前光标所在的下面

:n1,n2 write temp.c 将本文件中的n1,到n2行写入temp.c这个文件中去

CTRL＋L刷新屏幕
shift + < 左移一行
shift + > 右移一行

u: undo
CTRL+R: re-do
J: 合并一行
CTRL+p 自动完成功能
CTRL+g 查看当前文件全路径

q[a-z] 开始记录但前开始的操作为宏，名称可为【a-z】，然后用q终止录制宏。
用reg显示当前定义的所有的宏，用@[a-z]来在当前光标处执行宏[a-z].

Copyright by abnerchai, 2005.
